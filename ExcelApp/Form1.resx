<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnDestination.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAoBJREFUOE91k9tPE1EQxvlveBAvERUiMV5RxOiDJsqLDyjQSCKxQGmFIgVK6wUT
        d1vYbdlS6pOYGMCAb9amSohGMEYCJSC09EIDFqFVQinlc85Sg5UyySSbk/1+882cOVksHMaLEOqPoMdw
        Afa287Drz6G79SxsLWdgaz4FSXcSXU0nYH1QAGvjcciif4MBEssCHA+L0UPfG/NmxH0mJAICNoPidgbM
        SMxzsDTmZwZsxUQkY3bEfz6Ho/2yXG1AKsWaV0Qi1E2wTiRmnkDU5u0FsGArakUyKmEzapOt9ppKMDyo
        RsLfgQ2/QM44iA3HMgOSMYkABFklu6sSLNp89PI34O5TysJ1L4+496k8q5RsJxyGIhJ3IUnCrQhZDZmp
        Uh56uetwv7qL3xN6RCeN+OUxUgsZhsimn4ywXnlKDmsBniodxQvuGtwvFVgaa6Jswcq4MbMDdnUbCzTx
        HwLWgzxWZsjq/dxdgKUvBiyMNKBDczgdYm8rRCwoIB42ITrbjsXJR+jU5EIyXMKg/SaCH1QIDavge18F
        z1AZpt6UpTthixPzPsPy9GMsjrch/FUnV+nSF+G1VAKvSwmfqwZz7+6BxS4A27qlKRJPGhAeb0VoVIsO
        9SFYWwsxYL0qC+ecDKDYBgzdTgfYWk4j/E2PBeo1NKaF/5MG5rqDsNAq94tXSFxFWU2ACtzpjlAbt/4D
        0L6HyDYTB0brMf+xDibVAVjovK+zOAVQ7g1gjyXIxJ81VF0N30g1AfZD1BWgXyAACf/m7NtyeAZL0wHs
        pc06KzHjVGDaWYHvrkrwtTnQlWejWZEtw0yqHPAsa/fJmZLuBHsk7O7Z8JiAq8nw067IyvoDgzs7EKFT
        Ek4AAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        M3rDvb3GBPB/xd5ZEtCssRIAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAIsJAACLCQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAoAAADgAAAA0AAAAA8AAAAAAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAACgAAAN4AAAD/AAAAwgAA
        AA8AAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAjAAA
        AP8AAAD/AAAAyAAAABEAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AAAAAAA2AAAA/wAAAPoAAAD/AAAAyQAAABIAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADKAAAA/wAAAO4AAAD/AAAAywAAABMAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAHEAAAD/AAAArQAAALYAAAD/AAAAywAAABUAAAAAAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAIgAAAP0AAADmAAAAIAAAAMAAAAD/AAAAzQAA
        ABYAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAsAAAAP8AAABaAAAAAAAA
        AMUAAAD/AAAAzwAAABgAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAABYAAAA/wAA
        ALcAAAAAAAAADwAAAL8AAAD/AAAA0QAAABkAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        ABEAAADpAAAA/QAAACcAAAAAAAAADgAAAL0AAAD/AAAA0wAAABsAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAIAAAACAAAAAgAA
        AAIAAAAFAAAAAAAAAJkAAAD/AAAAdAAAAAAAAAADAAAACwAAALsAAAD/AAAA1QAAAB0AAAAAAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAAPQAAAP8AAADMAAAAAAAAAAIAAAAAAAAACQAAALgAAAD/AAAA1gAA
        AB4AAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgAA
        ACcAAAAlAAAAIwAAACIAAAAjAAAAIwAAACIAAAAlAAAA3gAAAP8AAAA2AAAAAAAAAAUAAAAAAAAACAAA
        ALYAAAD/AAAA2AAAACAAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA
        ADUAAAD+AAAA+wAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD6AAAA/wAAAI4AAAAAAAAABAAA
        AAIAAAAAAAAABwAAALQAAAD/AAAA2gAAACIAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAAAAAAAIAAAAOkAAAD/AAAA/wAAANEAAADKAAAA0gAAAM8AAADPAAAA0AAAAM0AAADYAAAAXgAA
        AAAAAAADAAAAAAAAAAIAAAABAAAABgAAALIAAAD/AAAA3AAAACMAAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAAAAAAKwAAAOMAAAD/AAAArAAAAAUAAAAAAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAIAAAABAAAABQAAAK8AAAD/AAAA3wAAACUAAAAAAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAKQAAAOIAAAD/AAAAtAAAAAcAAAABAAAAAwAA
        AAAAAAABAAAAAQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAABAAAAKoAAAD/AAAA4AAA
        ACcAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAJwAAAN8AAAD/AAAAtgAA
        AAgAAAAAAAAAAgAAAAAAAAADAAAAAAAAAF0AAADcAAAA0gAAANUAAADUAAAA1AAAANcAAADQAAAA1QAA
        AP8AAAD/AAAA5QAAAB4AAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAJQAA
        AN0AAAD/AAAAuAAAAAkAAAAAAAAAAgAAAAQAAAAAAAAAkAAAAP8AAAD6AAAA/gAAAP8AAAD/AAAA/wAA
        AP8AAAD+AAAA/AAAAPoAAAD+AAAANQAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAAAAAAIwAAANsAAAD/AAAAugAAAAoAAAAAAAAABQAAAAAAAAA4AAAA/wAAAN4AAAAkAAAAIAAA
        ACIAAAAhAAAAIQAAACIAAAAjAAAAJQAAABkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAAIQAAANkAAAD/AAAAvAAAAAsAAAAAAAAAAgAAAAAAAADNAAAA/wAA
        AD4AAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAHwAAANcAAAD/AAAAvgAAAAwAAAADAAAAAAAA
        AHUAAAD/AAAAmgAAAAAAAAAFAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAHQAAANUAAAD/AAAAwAAA
        AA8AAAAAAAAAKAAAAP0AAADqAAAAEgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAGwAA
        ANIAAAD/AAAAwgAAABEAAAAAAAAAtwAAAP8AAABZAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAAAAAAAGQAAANAAAAD/AAAAxwAAAAAAAABaAAAA/wAAALEAAAAAAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAAFwAAAM4AAAD/AAAAwgAAACEAAADmAAAA/QAAACIAAAAAAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAFQAAAMwAAAD/AAAAtwAAAK0AAAD/AAAAcwAA
        AAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAFAAAAMsAAAD/AAAA7wAA
        AP8AAADLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAEgAA
        AMkAAAD/AAAA+gAAAP8AAAA4AAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAAAAAAAEAAAAMgAAAD/AAAA/wAAAI4AAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAADgAAAMEAAAD/AAAA3wAAAAsAAAAAAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAADgAAAM8AAADeAAAACQAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/Qr///0Ff//8gr///IFf//5Ar//+QFf//kAr//8iFf//Igr//yEFf6AR
        Ar+l0QFfkACAr6AAgFegAIAr0F0wFagAqgvUAQAF6gkABfUFAAn6goul/UCIBf6ghP//UET//6hE///U
        An//6gJ///UCf//6gT///UE///6gv///UL8=
</value>
  </data>
</root>